{"version":3,"sources":["webpack:///webpack/bootstrap d393f9eabf9acb861fe9","webpack:///./src/index.js","webpack:///./~/furhat-core/dist/index.js","webpack:///./~/furhat-core/index.js","webpack:///./~/furhat-gui/dist/index.js","webpack:///./~/furhat-gui/index.js"],"names":["app","furhat","subscribe","data","console","log","sendEvent","send","event_name","variable","value","document","getElementById","addEventListener"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEA;;;;;;AAEA,IAAIA,MAAM,EAAV;;AAGA,yBAAO,UAAUC,MAAV,EAAkB;AACvBA,SAAOC,SAAP,CAAiB,kCAAjB,EAAqD,UAASC,IAAT,EAAc;AACjEC,YAAQC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAIAH,MAAIM,SAAJ,GAAgB,YAAW;AACzBL,WAAOM,IAAP,CAAY;AACVC,kBAAY,aADF;AAEVL,YAAM;AACJM,kBAAS,MADL;AAEJC,eAAM;AAFF;AAFI,KAAZ;AAOD,GARD;AASD,CAdD;;AAgBAC,SAASC,cAAT,CAAwB,YAAxB,EAAsCC,gBAAtC,CAAuD,OAAvD,EAAgE,YAAU;AAACb,MAAIM,SAAJ;AAAgB,CAA3F,E;;;;;;;ACrBa;;AAEb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,OAAO,GAAG,KAAK,GAAG,MAAM,GAAG;AACxF,+CAA+C,OAAO,GAAG,KAAK,GAAG,MAAM,GAAG;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA,yB;;;;;;ACpIA,iBAAiB,mBAAO,CAAC,CAAQ;;;;;;;;ACApB;;AAEb;AACA;AACA,CAAC;;AAED,kBAAkB,mBAAO,CAAC,CAAa;;AAEvC;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4DAA4D;AAC5D,OAAO;AACP,KAAK;AACL;AACA;;AAEA,4B;;;;;;ACnDA,iBAAiB,mBAAO,CAAC,CAAQ","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d393f9eabf9acb861fe9","import Furhat from 'furhat-gui'\n\nvar app = {};\n\n\nFurhat(function (furhat) {\n  furhat.subscribe('furhatos.app.furgui.DataDelivery', function(data){ \n    console.log(data);\n  });\n  \n  app.sendEvent = function() {\n    furhat.send({\n      event_name: \"VariableSet\",\n      data: {\n        variable:\"Name\",\n        value:\"Testare\"\n      }\n    });\n  }\n});\n\ndocument.getElementById(\"the-button\").addEventListener('click', function(){app.sendEvent()});\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Constants\nconst OPEN = 'open';\nconst CLOSE = 'closed';\nconst FAIL = 'failed';\n\n/**\n * Furhat main class. Maintains the websocket connection to furhatOS and\n * has methods to send events, subscribe to events and helper methods such as say,\n * gesture, etc.\n */\nclass Furhat {\n  constructor() {\n    this.eventFunctions = {};\n  }\n\n  /**\n   * Initializes the furhat socket connection and executes the callback method.\n   * @param domain IP Address for furhatOS - localhost if SDK.\n   * @param port port for RealTimeAPI module of furhatOS.\n   * @param route route for RealTimeAPI module of furhatOS.\n   * @param callback callback method to be executed on successful opening of websocket.\n   */\n  init(domain, port, route, callback) {\n    if (this.socket !== undefined) {\n      this.socket.close();\n    }\n    console.log(`Initializing websocket connection to ws://${domain}:${port}/${route}`); // eslint-disable-line no-console\n    this.socket = new window.WebSocket(`ws://${domain}:${port}/${route}`); // eslint-disable-line no-undef\n\n    this.socket.onopen = () => {\n      this.status = OPEN;\n      if (callback !== undefined) {\n        callback(OPEN, this);\n      }\n    };\n    this.socket.onmessage = event => {\n      if (this.eventFunctions[JSON.parse(event.data).event_name] !== undefined) {\n        this.eventFunctions[JSON.parse(event.data).event_name](JSON.parse(event.data));\n      }\n    };\n    this.socket.onclose = () => {\n      this.status = CLOSE;\n      if (callback !== undefined) {\n        callback(CLOSE, this);\n      }\n    };\n    this.socket.onerror = () => {\n      this.status = FAIL;\n      if (callback !== undefined) {\n        callback(FAIL, this);\n      }\n    };\n  }\n\n  /**\n   * Sends an event to furhatOS\n   * @param event Object containing the event. Mandtory to have event_name parameter in the object\n   */\n  send(event) {\n    if (this.socket.readyState === 2 || this.socket.readyState === 3) {\n      // SHIT\n    } else if (this.socket.readyState === 1) {\n      this.socket.send(JSON.stringify(event));\n    }\n  }\n\n  /**\n   * Subscribes to the given event and triggers the supplied callback on event\n   * @param eventName Name of the event to subscribe\n   * @param callback Function which needs to be triggered when the given event is recieved\n   * @param dontSend [Optional] [false by default] Boolean which determines wether to send\n   * the subscribe event or not. use it to set callbacks for event that are already subscribed to,\n   * for instance with group subscriptions\n   */\n  subscribe(eventName, callback, dontSend = false) {\n    const event = { event_name: 'furhatos.event.actions.ActionRealTimeAPISubscribe', name: eventName };\n    this.eventFunctions[eventName] = callback;\n    if (!dontSend) {\n      this.send(event);\n    }\n  }\n\n  /**\n   * Subscribes to the given event group\n   * @param groupNumber Number(Assigned ENUM) of the group that needs to be subscribed to\n   */\n  subscribeGroup(groupNumber) {\n    const event = { event_name: 'furhatos.event.actions.ActionRealTimeAPISubscribe', group: groupNumber };\n    this.send(event);\n  }\n\n  /**\n   * Says a given text\n   * @param text Text which needs to be said by Furhat\n   */\n  say(text) {\n    const event = { event_name: 'furhatos.event.actions.ActionSpeech', text };\n    this.send(event);\n  }\n\n  /**\n   * Stimulates the speech of a user in the interaction space\n   * @param text Text which needs to be said by the user\n   */\n  userSpeech(text) {\n    const event = { event_name: 'furhatos.event.senses.SenseTypingEnd', messageText: text };\n    this.send(event);\n  }\n\n  /**\n   * Stimulates SenseSpeechStart event. Can be used to stimulate user speech via typing\n   */\n  userSpeechStart() {\n    const event = { event_name: 'furhatos.event.senses.SenseTypingStart' };\n    this.send(event);\n  }\n\n  /**\n   * Performs the given gesture\n   * @param name Name of the gesture that needs to be performed\n   */\n  gesture(name) {\n    const event = { event_name: 'furhatos.event.actions.ActionGesture', name };\n    this.send(event);\n  }\n}\n\nexports.default = Furhat;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/furhat-core/dist/index.js\n// module id = 1\n// module chunks = 0","module.exports = require('./dist')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/furhat-core/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _furhatCore = require('furhat-core');\n\nvar _furhatCore2 = _interopRequireDefault(_furhatCore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet address;\nlet portNumber;\nlet callbackFun;\n\nconst InitCallback = (status, hat) => {\n  if (status === 'open') {\n    hat.send({\n      event_name: 'furhatos.event.senses.SenseSkillGUIConnected',\n      port: portNumber\n    });\n    callbackFun(hat);\n  } else if (status === 'closed' || status === 'failed') {\n    window.setTimeout(() => {\n      // eslint-disable-line no-undef\n      hat.init(address, portNumber, 'api', InitCallback);\n    }, 1000);\n  }\n};\n\n/**\n * FurhatGUI Function which sets up a connection to the furhat skill and gives\n * the furhat object to send and recieve events to the skill.\n * @param callback callback that needs to be triggered when a sucessful connection is established\n */\nconst FurhatGUI = callback => {\n  if (callback !== undefined && typeof callback === 'function') {\n    window.fetch('/port', { method: 'GET' }).then(r => {\n      // eslint-disable-line no-undef\n      r.json().then(o => {\n        const furhat = new _furhatCore2.default();\n        address = o.address; // eslint-disable-line prefer-destructuring\n        portNumber = o.port;\n        callbackFun = callback;\n        furhat.init(o.address, o.port, 'api', InitCallback); // eslint-disable-line no-undef\n      });\n    });\n  }\n};\n\nexports.default = FurhatGUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/furhat-gui/dist/index.js\n// module id = 3\n// module chunks = 0","module.exports = require('./dist')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/furhat-gui/index.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}